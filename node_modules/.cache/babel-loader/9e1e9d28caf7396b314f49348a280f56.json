{"ast":null,"code":"var _jsxFileName = \"/Users/talentscreen/Documents/Vehicle Search/Vehicle-Search/src/App.js\";\nimport React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport search from './components/search';\nimport cars from './components/cars';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.searchModel = model => {\n      this.props.history.push(\"/\".concat(model));\n    };\n  }\n\n  render() {\n    return React.createElement(BrowserRouter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      render: props => React.createElement(\"search\", Object.assign({}, props, {\n        searchModel: this.searchModel,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/:p_id\",\n      render: props => React.createElement(\"cars\", Object.assign({}, props, {\n        carData: this.props.carData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  let id;\n\n  if (ownProps) {\n    console.log(ownProps);\n    id = ownProps;\n  }\n\n  return {// carData:state.data.find(res=>res.model ===id)\n  };\n};\n\nexport default connect(mapStateToProps)(App);","map":{"version":3,"sources":["/Users/talentscreen/Documents/Vehicle Search/Vehicle-Search/src/App.js"],"names":["React","BrowserRouter","Route","Switch","connect","search","cars","App","Component","searchModel","model","props","history","push","render","carData","mapStateToProps","state","ownProps","id","console","log"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,aAAR,EAAuBC,KAAvB,EAA6BC,MAA7B,QAA0C,kBAA1C;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;;AAEA,MAAOC,GAAP,SAAmBP,KAAK,CAACQ,SAAzB,CAAmC;AAAA;AAAA;;AAAA,SACjCC,WADiC,GACpBC,KAAD,IAAS;AACnB,WAAKC,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,YAA4BH,KAA5B;AACD,KAHgC;AAAA;;AAIjCI,EAAAA,MAAM,GAAE;AACR,WACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,GAAlB;AAAsB,MAAA,MAAM,EAAGH,KAAD,IAAS,gDAAaA,KAAb;AAAqB,QAAA,WAAW,EAAE,KAAKF,WAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,MAAM,EAAGE,KAAD,IAAS,8CAAUA,KAAV;AAAiB,QAAA,OAAO,EAAE,KAAKA,KAAL,CAAWI,OAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADA,CADF,CADF;AAUD;;AAfkC;;AAiBnC,MAAMC,eAAe,GAAC,CAACC,KAAD,EAAOC,QAAP,KAAkB;AACtC,MAAIC,EAAJ;;AACA,MAAGD,QAAH,EAAY;AACVE,IAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AACAC,IAAAA,EAAE,GAACD,QAAH;AAED;;AACD,SAAM,CACF;AADE,GAAN;AAID,CAXD;;AAYA,eAAed,OAAO,CAACY,eAAD,CAAP,CAAyBT,GAAzB,CAAf","sourcesContent":["import React from 'react';\nimport {BrowserRouter, Route,Switch} from 'react-router-dom'\nimport {connect} from 'react-redux'\nimport search from './components/search'\nimport cars from './components/cars'\n\nclass  App extends React.Component {\n  searchModel=(model)=>{\n    this.props.history.push(`/${model}`)\n  }\n  render(){\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n      <Switch>\n        <Route exact path='/' render={(props)=><search  {...props}  searchModel={this.searchModel} />} />\n        <Route path='/:p_id' render={(props)=><cars {...props} carData={this.props.carData}/>}/>\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}\n}\nconst mapStateToProps=(state,ownProps)=>{\n  let id;\n  if(ownProps){\n    console.log(ownProps)\n    id=ownProps\n    \n  }\n  return{\n      // carData:state.data.find(res=>res.model ===id)\n\n  }\n}\nexport default connect(mapStateToProps)(App);\n"]},"metadata":{},"sourceType":"module"}